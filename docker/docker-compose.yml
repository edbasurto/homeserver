version: '3'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /opt/hass:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9000:9000/tcp
    volumes:
        - /opt/portainer:/data
        - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

#  pihole:
#    container_name: pihole
#    image: pihole/pihole:latest
#    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
#    ports:
#      - "53:53/tcp"
#      - "53:53/udp"
#      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
#      - "80:80/tcp"
#    environment:
#      TZ: 'America/Chicago'
#      # WEBPASSWORD: '0okami'
#    # Volumes store your data between container upgrades
#    volumes:
#      - '/opt/pihole/etc-pihole:/etc/pihole'
#      - '/opt/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
#      # OLD
#      #- './etc-pihole:/etc/pihole'
#      #- './etc-dnsmasq.d:/etc/dnsmasq.d'
#      #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
#    cap_add:
#      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
#    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /etc/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "2000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  cadvisor:
    # TODO: latest tag is not updated, check latest release https://github.com/google/cadvisor/releases 
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    privileged: true
  
  #---------------------------------------------------------------------#
  #     Homarr - A simple, yet powerful dashboard for your server.     #
  #---------------------------------------------------------------------#
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - /opt/homarr/configs:/app/data/configs
      - /opt/homarr/data:/data
      - /opt/homarr/icons:/app/public/icons
    ports:
      - '7575:7575'
    #./icons/Ookami_Logo_Transparent.png
  
  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    ports:
      - 55:53/tcp #plain dns
      - 55:53/udp #plain dns
#     - 67:67/udp #add if you intend to use AdGuard Home as a DHCP server
#     - 68:68/udp #add if you intend to use AdGuard Home as a DHCP server
#     - 68:68/tcp #add if you intend to use AdGuard Home as a DHCP server
      - 85:80/tcp
#     - 443:443/tcp
#     - 443:443/udp
      - 3005:3000/tcp
#     - 853:853/tcp
#     - 784:784/udp
#     - 853:853/udp
#     - 8853:8853/udp
#     - 5443:5443/tcp
#     - 5443:5443/udp
    volumes:
      - /opt/adguardhome/work:/opt/adguardhome/work
      - /opt/adguardhome/conf:/opt/adguardhome/conf
    restart: unless-stopped
  
